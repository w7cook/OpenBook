# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Import Secure routes
*       /                                       module:secure

GET     /es-admin               						elasticsearch.ElasticSearchAdmin.index
GET     /es-admin/               						elasticsearch.ElasticSearchAdmin.index

# Home page
GET     /                                       Application.news

GET     /about                                  Application.about
GET     /account                                Application.account
GET     /requests                               Application.friendRequests

#Skins
GET     /public/stylesheets/main.css            Skins.stylesheet
GET     /skin                                   Skins.skin
POST    /skins/changeSkinToTemplate             Skins.changeSkinToTemplate
POST    /skins/editSkin                         Skins.editSkin
POST    /skins/setBackgroundPhoto               Skins.setBackgroundPhoto

# Threads
GET     /threads                                Categories.listAll
GET     /threads/{<[0-9]+>catId}          		Categories.listSingle
GET     /threads/[0-9]+/{<[0-9]+>threadId}      FThreads.listSingle


# Profile
GET     /application.prev.gif 			staticFile:/public/images/prev.gif
GET     /application.next.gif 			staticFile:/public/images/next.gif
GET     /application.calendar.jpg 			staticFile:/public/images/calendar.gif

# Photos
GET     /photos/?                               Photos.photos
POST    /photos                                 Photos.addPhoto
GET     /photos/{<[0-9]+>photoId}               Photos.getPhoto
POST    /photos/setProfilePhoto                 Photos.setProfilePhoto
DELETE  /photos/{<[0-9]+>photoId}               Photos.removePhoto
GET     /photos/setProfilePhotoPage             Photos.setProfilePhotoPage
GET     /photos/setProfilePhoto                 Photos.setProfilePhotoPage
POST	  /photos/setProfilePhoto			         		Photos.setProfilePhoto
POST    /photos/addProfilePhoto                 Photos.addProfilePhoto
GET     /users/{<[0-9]+>ownerId}/photos/?       Photos.photos

# Messages
GET     /messages/inbox                         Messages.inbox
GET     /messages/createMessage                 Messages.createMessage
POST    /messages                               Messages.sendMessage

# Search
GET     /users/search                           UserSearch.search
GET     /groups/search                          GroupSearch.search

#Account
#GET     /users/?                                #Get a list of all users
#POST    /users/?                                #Add / update a user
#GET     /users/{<[0-9]+>userId}                 #Get account info for a specific user
#DELETE  /users/{<[0-9]+>userId}                 #Delete a user

#Posts
#GET     /posts/?                                #Get all posts
#POST    /posts/?                                #Add/update post
#GET     /posts/{<[0-9]+>postId}                 #Get a specific post
#DELETE  /posts/{<[0-9]+>postId}                 #Delete a post
#GET     /users/{<[0-9]+>userId}/posts/?         #get all posts by a user

#Comments
#GET     /comment/?                              #Get all comments
#GET     /comment/{<[0-9]+>commentId}            #Get a specific comment
#DELETE  /comment/{<[0-9]+>commentId}            #Delete a comment
#GET     /status/{<[0-9]+>statusId}/comments/?   #Get all comments for a status
#POST    /status/{<[0-9]+>statusId}/comments/?   #Add a comment to a status
#GET     /users/{<[0-9]+>userId}/comments/?      #get all comments by a user

#Relationships
GET 	/relationships							Relationships.relationships

# Checkin
GET     /checkin                                Checkin.checkin
GET     /checkin/at                             Checkin.at

*       /photos/{anything}                      Application.notFound
*       /users/{anything}/photos/?              Application.notFound

# Comments
GET		/                                       Comments.comments

# Posts
GET     /                                       Posts.posts

# Groups
GET     /groups/{id}                            Groups.group

# Ignore favicon requests
GET     /favicon.ico                            404

# Map static resources from the /app/public folder to the /public path
GET     /public/                                staticDir:public

# Catch all
*       /{controller}/{action}                  {controller}.{action}
